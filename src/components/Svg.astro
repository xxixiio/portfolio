---
// Life Saver: https://blog.siposdani87.com/posts/create-dynamic-svg-component-in-astro-project
import { parse } from "node-html-parser";

const files = import.meta.glob<string>("/public/**/*.svg", {
        query: "?raw",
});

export interface Props {
    src: string;
    class: string;
    style: any;
}

const getSVG = async (src: string) => {
    const filePath = `/public${src}`;

    if (!(filePath in files)) {
        throw new Error(`${filePath} not found`);
    }

    const { default: file } = await files[filePath]() as unknown as { default: string };
    const root = parse(file);

    const svg = root.querySelector("svg") as unknown as SVGElement;
    const { attributes, innerHTML } = svg;

    return {
        attributes,
        innerHTML,
    };
}

const { src, ...attributes } = Astro.props;
const { attributes: baseAttributes, innerHTML } = await getSVG(src);

const svgAttributes = { ...baseAttributes, ...attributes };
---

<svg {...svgAttributes} set:html={innerHTML} />